package com.example.paquetcoachapp;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.math.BigInteger;
import java.net.MalformedURLException;
import java.net.URL;
//import java.util.regex.*;
import java.util.ArrayList;

public class LienServeurWeb {
	
	
	public static BigInteger[] testGetCles(){
		String eatn = "95353957"+"@"+"2222335926411638683";
		BigInteger[] cles = new BigInteger[2];
		BigInteger e = null;
		BigInteger n = null;
		int i =0;
		String lettre;
		boolean x = true;
		while(x){
			lettre = Character.toString(eatn.charAt(i));
			if (lettre.equals("@")){
				x=false;
				e= new BigInteger((eatn.subSequence(0, i)).toString());
				n =new BigInteger((eatn.subSequence(i+1, eatn.length())).toString());
			}
			else {
				i++;
			}
		}
		cles[0]=e;
		cles[1]=n;
		return cles;
			
			
		
	}
	
	public static BigInteger[] getCles(String User, String IP){
		BigInteger[] cles = new BigInteger[2];
		String urlCle = "http://" + IP + "/secu/getCle.php?user=" + User;
		String eatn = (LienServeurWeb.getCode(urlCle)).get(0);
		System.out.println(eatn);
		BigInteger e = null;
		BigInteger n = null;
		int i =0;
		String lettre="";
		boolean x = true;
		while(x){
			lettre = eatn.substring(i,i+1);
			if (lettre.equals("@")){
				System.out.println(i);
				x=false;
				String part1 = eatn.substring(0, i);
				e = new BigInteger(part1);
				System.out.println(e);
				int fin = eatn.length();
				String part2 = eatn.substring(i+1, fin);
				n = new BigInteger(part2);
				System.out.println(n);
			}
			else {
				i++;
			}
			/*lettre = Character.toString(eatn.charAt(i));
			if (lettre.equals("@")){
				x=false;
				e= new BigInteger((eatn.subSequence(0, i)).toString());
				n =new BigInteger((eatn.subSequence(i+1, eatn.length())).toString());
			}
			else {
				i++;
			}
			*/
		}
		cles[0]=e;
		cles[1]=n;
		return cles;
		
	}
	
	public static BigInteger[] setCle(String User, String IP){
		BigInteger[] cles = new BigInteger[3];
		
		GenerateRSAKeys Claves = new GenerateRSAKeys(31);
        BigInteger e = Claves.getE();
        BigInteger n = Claves.getN();
        BigInteger d = Claves.getD();
        
        cles[0]=e;
        cles[1]=n;
        cles[2]=d;
        
		String url = "http://" + IP + "/secu/setcle.php?CleEncrypt=" + e + "&NEncrypt=" + n;
		if (urlExists(url)){
			try{
				new URL(url);
			}
			catch (IOException ex) {
                System.out.println("Erreur dans l'ouverture de l'URL : " + ex);
        } finally{  }
		}
		else {
            System.out.println("Le site n'existe pas !");
    }
		return cles;
	}
	
	
	
	public static void nouvelUser(String User, String IP){
		
		 String url = "http://" + IP + "/premiertest/nouvelUser.php?user=" + User;
		if (urlExists(url)){
			try{
				new URL(url);
			}
			catch (IOException ex) {
                System.out.println("Erreur dans l'ouverture de l'URL : " + ex);
        } finally{  }
		}
		else {
            System.out.println("Le site n'existe pas !");
    }
	}
	
	
	public static void getCigarette(String User, String IP){
		BigInteger[] cles = new BigInteger[2];
		cles =getCles(User, IP);
		String contenuClair= "user=" + User;
		String contenuCode= RSA.encryptString(contenuClair, cles[0], cles[1]);
		
		String url = "http://"+IP+"/premiertest/getcigarette.php?" + contenuCode;
		if (urlExists(url)){
			try{
				new URL(url);
			}
			catch (IOException ex) {
                System.out.println("Erreur dans l'ouverture de l'URL : " + ex);
        } finally{  }
		}
		else {
            System.out.println("Le site n'existe pas !");
    }
	}
	
	public static void nouveauMessage(String Envoyeur, String Destinataire, String Message, String Date, String IP){
		
		BigInteger[] cles = new BigInteger[2];
		cles =getCles(Envoyeur, IP);
		String contenuClair= "info=(" + Envoyeur + "@" + Destinataire + "@" + Message + "@" + Date +"@)";
		String contenuCode= RSA.encryptString(contenuClair, cles[0], cles[1]);
		
		String url = "http://"+IP+"/premiertest/message.php?" + contenuCode;
		if (urlExists(url)){
			try{
				new URL(url);
			}
			catch (IOException ex) {
                System.out.println("Erreur dans l'ouverture de l'URL : " + ex);
        } finally{  }
		}
		else {
            System.out.println("Le site n'existe pas !");
    }
	}
	
	public static void nouvelleCigarette(String User, String Date, String NbCigarettes, String IP){
		
		BigInteger[] cles = new BigInteger[2];
		cles =getCles(User, IP);
		String contenuClair= "info=(" + User + "@" + Date + "@" + NbCigarettes + "@)";
		String contenuCode= RSA.encryptString(contenuClair, cles[0], cles[1]);
		
		String url = "http://"+IP+"/premiertest/cigarette.php?" + contenuCode;
	    if (urlExists(url)){
			try{
				new URL(url);
			}
			catch (IOException ex) {
                System.out.println("Erreur dans l'ouverture de l'URL : " + ex);
        } finally{  }
		}
		else {
            System.out.println("Le site n'existe pas !");
    }
	}
	
    public static ArrayList<String> getCode(String url) {
            String code = "";

            if (urlExists(url)) {
                    BufferedReader in = null;

                    try {
                            URL site = new URL(url);
                            in = new BufferedReader(
                                            new InputStreamReader(site.openStream()));

                            String inputLine;
                            while ((inputLine = in.readLine()) != null) {
                                    code = code + "\n" + (inputLine);
                            }

                            in.close();

                    } catch (IOException ex) {
                            System.out.println("Erreur dans l'ouverture de l'URL : " + ex);
                    } finally {
                            try {
                                    in.close();
                            } catch (IOException ex) {
                                    System.out.println("Erreur dans la fermeture du buffer : "
                                                    + ex);
                            }
                    }
            } else {
                    System.out.println("Le site n'existe pas !");
            }
            // return code;
            ArrayList<String> resultat = extraireInfo(code);
            return resultat;
    }

    public static boolean urlExists(String url) {
            try {
                    URL site = new URL(url);
                    try {
                            site.openStream();
                            return true;
                    } catch (IOException ex) {
                            return false;
                    }
            } catch (MalformedURLException ex) {
                    return false;
            }
    }

    public static ArrayList<String> extraireInfo(String s) {//Ca marche!

            ArrayList<String> data = new ArrayList<String>();
            int i = 0; Character c; String info="";
            while (i<s.length()){
                    Buffer buffer1 = new Buffer(6);
                    while (buffer1.equal("<info>")&&i<s.length()) //boucle qui lit tout le fichier jusqu'a trouver <info>
                    {
                            c = s.charAt(i);
                            buffer1.add(c);
                            i++;
                    }
                    Buffer buffer2 = new Buffer(7);
                    while (buffer2.equal("</info>)")&&i<s.length()){ //boucle qui lit le fichier jusqu'a ce qu'il trouve </info>
                            c=s.charAt(i);
                            buffer2.add(c);
                            info=info+c;
                            i++;
                    }
                    if (info.length()>buffer2.size){
                    info = info.substring(0, info.length()-buffer2.size);
                    data.add(info);//on ajoute a data le contenu de la balise info courante
                    }
                    info="";
            }
            return data; //ArrayList contenant les infos demandés non décrypté

    }
}
